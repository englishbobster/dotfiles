defmodule Chop do
  def guess(actual, start..finish) do
    first_guess = div(finish - start, 2)  + start
    IO.puts "is it #{first_guess}"
    guess(actual, first_guess, start..finish)
  end
  def guess(actual, actual, _), do: actual
  def guess(actual, current, start..finish) when current > actual do
    new_guess = div(finish - start, 2) + start
    IO.puts "is it #{new_guess}"
    guess(actual, new_guess, start..(current - 1))
  end
  def guess(actual, current, start..finish) when current < actual do
    new_guess = div(finish - start, 2) + start
    IO.puts "is it #{new_guess}"
    guess(actual, new_guess, (current + 1)..finish)
  end

  def guess_alt(actual, range = low..high) do
    num = div(high + low, 2)
    IO.puts("Is it #{num}")
    _guess_alt(actual, range, num)
  end
  def _guess_alt(actual, _, guess) when actual == guess do
    actual
  end
  def _guess_alt(actual, low..high, guess) when actual > guess do
    guess_alt(actual, guess+1..high)
  end
  def _guess_alt(actual, low..high, guess) when actual < guess do
    guess_alt(actual, low..guess-1)
  end

end
