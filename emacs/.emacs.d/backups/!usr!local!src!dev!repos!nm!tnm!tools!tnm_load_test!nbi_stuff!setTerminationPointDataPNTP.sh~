#!/bin/bash

TARGET_WS_ADDR="http://localhost:8080"
ENTRY_POINT="/soap/mtosi/TerminationPointControl"
MD="Tnm Server"
NODE=""
PTP=""
MESSAGE=""
TIMEOUT=10

show_help () {
    echo -e "Test script to set PNTP Nearest Neighbor using curl."
    echo -e "-d <MD>:\t\tThe MTOSI management domain."
    echo -e "-n <ME>:\t\tThe MTOSI node IP address."
    echo -e "-p <PTP>:\t\tThe ptp in format eg. client:1:2:1-2"
    echo -e "-m <message>:\t\tA string with a  neighbor name. If this is ommited it will remove any entry."
    echo -e "-t <Target WS>:\t\tThe target WS e.g http://localhost:8080"
}

declare_action () {
    echo "A message is not given and so any existing PNTP defined as $MD/$NODE/$PTP will be deleted. "
}

print_args () {
    echo -e "Running curl with the following arguments:"
    echo -e "message = $MESSAGE"
    echo -e "target = $TARGET_WS_ADDR"
    echo -e "Management Domain = $MD"
    echo -e "Node = $NODE"
    echo -e "PTP =  $PTP"
}

handle_missing_args () {
    [[ -z $PTP ]] && echo "PTP not set." && exit 0
    [[ -z $NODE ]] && echo "Node IP not given." && exit 0
    [[ -z $MESSAGE ]] && declare_action
}


while getopts "hd:n:p:m:t:" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        m)
            MESSAGE=$OPTARG
            ;;
        t)
            TARGET_WS_ADDR=$OPTARG
            ;;
        d)
            MD=$OPTARG
            ;;
        n)
            NODE=$OPTARG
            ;;
        p)
            PTP=$OPTARG
            ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

handle_missing_args

print_args

DATA_SOAP="<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:v1=\"http://www.tmforum.org/mtop/fmw/xsd/hdr/v1\" xmlns:v11=\"http://www.tmforum.org/mtop/rp/xsd/tpc/v1\" xmlns:v12=\"http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1\" xmlns:v13=\"http://www.tmforum.org/mtop/fmw/xsd/nam/v1\" xmlns:v14=\"http://www.tmforum.org/mtop/nrb/xsd/lp/v1\" xmlns:v15=\"http://www.tmforum.org/mtop/fmw/xsd/gen/v1\">
   <soapenv:Header>
      <v1:header/>
   </soapenv:Header>
   <soapenv:Body>
      <v11:setTerminationPointDataRequest>
         <v11:tpInfo>
            <v12:tpRef>
                <v13:rdn>
	          <v13:type>MD</v13:type>
	          <v13:value>$MD</v13:value>
	           </v13:rdn>
	           <v13:rdn>
	             <v13:type>ME</v13:type>
	             <v13:value>$NODE</v13:value>
	           </v13:rdn>
                   <v13:rdn>
	             <v13:type>PTP</v13:type>
	             <v13:value>$PTP</v13:value>
	           </v13:rdn>
            </v12:tpRef>
     	      <v14:transmissionParametersList>
     	      	<v14:transmissionParameters>
                  <v14:layer>LR_PHYSICAL_OPTICAL</v14:layer>
                        <v14:parameterList/>
                        <v14:vendorExtensions>
                           <v14:provisionedNeighborTP>$MESSAGE</v14:provisionedNeighborTP>
                        </v14:vendorExtensions>
     	      	</v14:transmissionParameters>
 	           </v14:transmissionParametersList>
         </v11:tpInfo>
      </v11:setTerminationPointDataRequest>
   </soapenv:Body>
</soapenv:Envelope>"

HDR_TYPE="Content-Type: text/xml;charset=UTF-8"
HDR_ACTION="SOAPAction: setTerminationPointData"

echo $DATA_SOAP

curl --header  "$HDR_TYPE" --header "$HDR_ACTION" --data   "$DATA_SOAP" "$TARGET_WS_ADDR$ENTRY_POINT" --connect-timeout $TIMEOUT &

